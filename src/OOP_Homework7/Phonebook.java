package OOP_Homework7;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

public class Phonebook {

 private List< String> data;
 private  int number;
 private  String name;
 void insert (String name, int number){
  if(data == null){
      data = new ArrayList< String>();
   }
   else{
      data.add( String.format("%s - %d", name, number));
   }


 }

}
/*Създайте клас PhoneBook който има списък List< String> data,
 който съдържа низове със следния формат: “име-номер”.
Напишете следните методи в класа PhoneBook
void insert - получава име и номер и ги добавя в списъка,
но ако съществува запис с такъв номер го трие и на негово място слага новия запис.
boolean deleteByPhoneNumber - изтрива запис по номер, връща false ако няма такъв запис,
 а true когато намери такъв запис и го изтрие.
getAllNamesStartingWith - връща всички записи за които имената започват с даден низ
toString - връща низ съдържащ всички записи, като всеки запис е на нов ред
Създайте PhoneBookTest клас който:

Показва следното меню в конзолата: Изберете опция:

Добави нов запис
Изтрий запис по номер
Покажи всички записи които започват с низ
Принтирай toString
Изход
При избор на 1, показва “Въведете име:” и прочита въведеното име.
После показва “Въведете телефонен номер:” и прочита въведения номер.
Ако съществува запис за този номер, принтира “Запис за този номер съществува вече.
 Изберете 1, за да бъде презаписан или 0,
за да се върнете към началното меню.”.
Прочита избраната опция. При 1 - добавя записа във phoneBook-a,
а при 0 - отново извежда менюто. (помислете какво да изведете при невалиден избор).
 Ако пък не съществува запис за този номера, тогава просто принтира “Записът се въвежда…” и въвежда записа.
 На края принтира “Изберете следваща опция" и чака за следващия избор на потребителя.

При избор на 2 показва “Въведете телефонния номер за който искате да бъде изтрит записът.” и прочита въведения номер.
В зависимост от това дали записът е бил успешно изтрит или не принтира
 “Записът беше успешно изтрит.” или “Запис за този номер не беше намерен.”
 Накрая принтира “Изберете следваща опция" и чака за следващия избор на потребителя.

При избор на 3 показва “Въведете низ.” и прочита въведния низ.
Принтира “Всички записи, които започват с <въведния низ> са следните: <брой записи>”
 Принтира “Изберете следваща опция" и чака за следващия избор на потребителя.

При избор 4 принтира toString-а и след това принтира
 “Изберете следваща опция" и чака за следващия избор на потребителя.


    Hint: Помислете да изкарате в методи кода, който се налага да използвате повече от веднъж
 (ако има такъв).
   Hint: Не забравяйте да валидирате входните данни.
   Hint: Как ще се държи програмата ви когато данните в списъка свършат?

Рефакторирайте задача “Phone Book” така, че вместо List<String>, класът PhoneBook да съхранява данните в Map.

Трябва да изберете коя конкретна имплементация на Map интерфейса да ползвате, според нуждите на конкретната задача
Трябва да рефакторирате методите който оперират със списъка от String в който са записани данните в момента.
Тези методи трбява вече да оперират с Map-a в която ще са данните след като рефакторирате PhoneBook.


   */